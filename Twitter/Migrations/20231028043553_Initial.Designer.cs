// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Twitter.Repository;

#nullable disable

namespace Twitter.WebAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231028043553_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Twitter.Domain.Models.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MediaString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TweetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TweetId");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Twitter.Domain.Models.PollItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Choice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountVoices")
                        .HasColumnType("int");

                    b.Property<Guid?>("TweetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TweetId");

                    b.ToTable("PollItems");
                });

            modelBuilder.Entity("Twitter.Domain.Models.Tweet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountLikes")
                        .HasColumnType("int");

                    b.Property<int>("CountReplies")
                        .HasColumnType("int");

                    b.Property<int>("CountReposts")
                        .HasColumnType("int");

                    b.Property<int>("CountViews")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Schedule")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TweetDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tweets");
                });

            modelBuilder.Entity("Twitter.Domain.Models.Media", b =>
                {
                    b.HasOne("Twitter.Domain.Models.Tweet", null)
                        .WithMany("Medias")
                        .HasForeignKey("TweetId");
                });

            modelBuilder.Entity("Twitter.Domain.Models.PollItem", b =>
                {
                    b.HasOne("Twitter.Domain.Models.Tweet", null)
                        .WithMany("PollItems")
                        .HasForeignKey("TweetId");
                });

            modelBuilder.Entity("Twitter.Domain.Models.Tweet", b =>
                {
                    b.Navigation("Medias");

                    b.Navigation("PollItems");
                });
#pragma warning restore 612, 618
        }
    }
}
